# .github/workflows/ipa_downloader.yml

name: IPA Auto Downloader

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

# 环境变量：请在这里修改为你需要跟踪的应用的 Bundle ID
env:
  BUNDLE_ID: com.tencent.xin # <-- 在这里修改为你想要的 App Bundle ID

jobs:
  download-ipa:
    runs-on: macos-latest
    permissions:
      contents: write # Needed to commit version file and create releases

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create directories
        run: |
          mkdir -p ./ipas
          mkdir -p ./versions

      - name: Get Latest App Version from App Store
        id: app_info
        run: |
          APP_STORE_INFO=$(curl -s "https://itunes.apple.com/lookup?bundleId=${{ env.BUNDLE_ID }}&country=cn")
          LATEST_VERSION=$(echo "$APP_STORE_INFO" | jq -r '.results[0].version')
          APP_NAME=$(echo "$APP_STORE_INFO" | jq -r '.results[0].trackName')
          
          echo "version=${LATEST_VERSION}" >> $GITHUB_OUTPUT
          echo "name=${APP_NAME}" >> $GITHUB_OUTPUT
          echo "Latest version on App Store: ${LATEST_VERSION} for ${APP_NAME}"

      - name: Get Locally Stored Version
        id: local_info
        run: |
          VERSION_FILE="./versions/${{ env.BUNDLE_ID }}.txt"
          if [ -f "$VERSION_FILE" ]; then
            STORED_VERSION=$(cat "$VERSION_FILE")
          else
            STORED_VERSION="0.0.0"
          fi
          echo "version=${STORED_VERSION}" >> $GITHUB_OUTPUT
          echo "Last downloaded version: ${STORED_VERSION}"

      - name: Compare versions and download if new
        if: steps.app_info.outputs.version != steps.local_info.outputs.version
        run: |
          echo "New version found! Current: ${{ steps.app_info.outputs.version }}, Stored: ${{ steps.local_info.outputs.version }}"
          echo "Starting download process..."
          
          echo "::group::Install ipatool via Homebrew"
          # This is the more stable installation method
          export HOMEBREW_NO_AUTO_UPDATE=1
          brew install ipatool
          echo "::endgroup::"
          
          echo "::group::Login to App Store"
          # The path prefix is no longer needed after installing with brew
          ipatool --verbose auth login -e '1256242238@qq.com' -p 'vfiv-jslc-tkmg-iwys'
          echo "::endgroup::"

          echo "::group::Download IPA"
          IPA_FILENAME="${{ steps.app_info.outputs.name }}-${{ steps.app_info.outputs.version }}.ipa"
          # The path prefix is no longer needed here either
          ipatool download --bundle-identifier "${{ env.BUNDLE_ID }}" -o "./ipas/${IPA_FILENAME}" --purchase
          echo "::endgroup::"
          
          echo "IPA_PATH=./ipas/${IPA_FILENAME}" >> $GITHUB_ENV
          echo "RELEASE_TAG=${{ steps.app_info.outputs.name }}-${{ steps.app_info.outputs.version }}" >> $GITHUB_ENV
          echo "RELEASE_NAME=${{ steps.app_info.outputs.name }} v${{ steps.app_info.outputs.version }}" >> $GITHUB_ENV
          
      - name: Create Release and Upload IPA
        if: steps.app_info.outputs.version != steps.local_info.outputs.version
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.RELEASE_TAG }}
          files: ${{ env.IPA_PATH }}
          body: |
            App: ${{ steps.app_info.outputs.name }}
            Version: ${{ steps.app_info.outputs.version }}
            Bundle ID: ${{ env.BUNDLE_ID }}
            Auto-downloaded by GitHub Actions.

      - name: Update and Push Version File
        if: steps.app_info.outputs.version != steps.local_info.outputs.version
        run: |
          echo "${{ steps.app_info.outputs.version }}" > "./versions/${{ env.BUNDLE_ID }}.txt"
          
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          
          git add ./versions/${{ env.BUNDLE_ID }}.txt
          git commit -m "chore: Update ${{ steps.app_info.outputs.name }} to version ${{ steps.app_info.outputs.version }}"
          git push
